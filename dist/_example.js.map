{"version":3,"file":"_example.js","sourceRoot":"","sources":["../lib/_example.ts"],"names":[],"mappings":";;;;;;;;AAAA,sBAMU;AACV,4CAA4C;AAK5C,IAAM,SAAS;IAAf;IA6BA,CAAC;IA1BG,8BAAU,GAAV,UAAW,GAAiB,EAAE,GAAkB;QAC5C,wDAAwD;QACxD,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;IAC1C,CAAC;IAGD,4BAAQ,GAAR,UAAS,GAAiB,EAAE,GAAkB;QAC1C,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IACtB,CAAC;IAGD,gCAAY,GAAZ,UAAa,GAAiB,EAAE,GAAkB;QAC9C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QAClB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC5B,CAAC;IAGD,2BAAO,GAAP,UAAQ,GAAiB,EAAE,GAAkB;QACzC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QACpB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IACjC,CAAC;IAGD,+BAAW,GAAX,UAAY,GAAiB,EAAE,GAAkB;QAC7C,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IACxB,CAAC;IACL,gBAAC;AAAD,CAAC,AA7BD,IA6BC;AA1BG;IADC,cAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC;2CAIjC;AAGD;IADC,cAAW,CAAC,IAAI,EAAE;yCAGlB;AAGD;IADC,cAAW,CAAC,GAAG,EAAE;6CAIjB;AAGD;IADC,cAAW,CAAC,KAAK,EAAE;wCAInB;AAGD;IADC,cAAW,CAAC,MAAM,EAAE;4CAGpB;AA5BC,SAAS;IAHd,cAAW,CAAC,EAEZ,CAAC;GACI,SAAS,CA6Bd;AAED,iBAAc,CAAC,SAAS,EAAE;IACtB,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,KAAK;IACd,SAAS,EAAE,KAAK;IAChB,QAAQ,EAAE,KAAK;CAClB,CAAC,CAAA","sourcesContent":["import {\n    MicroRouter,\n    MicroMethod,\n    MicroResponse,\n    MicroRequest,\n    MicroBootstrap\n} from '.'\n// import * as bodyParser from 'body-parser'\n\n@MicroRouter({\n    // middleware: [bodyParser.json()]\n})\nclass ServerApp {\n\n    @MicroMethod.Get('/users/:userId')\n    helloWorld(req: MicroRequest, res: MicroResponse): void {\n        // console.log('req.params.userId\\n', req.params.userId)\n        res.send('Hello ' + req.params.userId)\n    }\n\n    @MicroMethod.Post()\n    addHello(req: MicroRequest, res: MicroResponse): void {\n        res.send(req.body)\n    }\n\n    @MicroMethod.Put()\n    putToTheTest(req: MicroRequest, res: MicroResponse): void {\n        console.log('put')\n        res.send(req.body.putty)\n    }\n\n    @MicroMethod.Patch()\n    eyePath(req: MicroRequest, res: MicroResponse): void {\n        console.log('patch')\n        res.send(req.body.patch_name)\n    }\n\n    @MicroMethod.Delete()\n    forgetMeNot(req: MicroRequest, res: MicroResponse): void {\n        res.send('Deleted!')\n    }\n}\n\nMicroBootstrap(ServerApp, {\n    port: 3000,\n    cluster: false,\n    useSocket: false,\n    liteMode: false\n})\n"]}