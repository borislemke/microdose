{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;AAAA,2BAA4B;AAC5B,6CAA0C;AAE1C,mCAA2C;AAQ3C;IAAA;IAoEA,CAAC;IAhEQ,cAAS,GAAhB,UAAkB,GAAG,EAAE,MAAwB;QAC7C,+BAA+B;QAC/B,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,WAAW,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;SACjD;QAED,iCAAiC;QACjC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAA;QAErC,IAAI,MAAM,CAAC,SAAS,EAAE;YAEpB;;;eAGG;YACH,yBAAgB,CAAC,OAAO,CAAC,UAAA,MAAM;gBAC7B,IAAM,kBAAkB,GAAG,MAAM,CAAC,WAAW;qBAC5C,IAAI,CAAC,UAAA,WAAW,IAAI,OAAA,WAAW,CAAC,IAAI,EAAhB,CAAgB,CAAC,CAAA;gBAEtC,IAAM,eAAe,GAAG,kBAAkB,CAAC,IAAI,CAAA;gBAE/C,IAAI,kBAAkB,EAAE;oBACtB,OAAO,CAAC,IAAI,CAAC,uCAAuC;0BAChD,eAAe,GAAG,iCAAiC,CAAC,CAAA;iBACzD;YACH,CAAC,CAAC,CAAA;YAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;SACvB;QAED,IAAM,SAAS,GAAG,yBAAgB;aACjC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,UAAU,KAAK,GAAG,CAAC,IAAI,EAA9B,CAA8B,CAAC,CAAA;QAE/C,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,oDAAoD;kBAC7D,8DAA8D;kBAC9D,gBAAgB,CAAC,CAAA;SACtB;aAAM;YACL,wBAAU,CAAC,QAAQ,OAAnB,wBAAU,EAAa,SAAS,CAAC,WAAW,EAAC;SAC9C;QAED,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;aAC3B,YAAY,CAAC,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,wBAAU,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,EAAjC,CAAiC,CAAC,CAAA;QAE9D,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,UAAC,GAAG;gBAE7B,IAAI,GAAG,EAAE;oBACP,MAAM,CAAC,GAAG,CAAC,CAAA;iBACZ;gBAED,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE;oBAC1C,IAAI,MAAM,CAAC,SAAS,EAAE;wBACpB,OAAO,CAAC,IAAI,CACV,oDAAoD;8BAClD,wDAAwD,CAC3D,CAAA;qBACF;iBACF;gBAED,OAAO,EAAE,CAAA;YACX,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC;IAjEM,eAAU,GAAG,KAAK,CAAA;IAkE3B,WAAC;CAAA,AApED,IAoEC;AApEY,oBAAI","sourcesContent":["import * as http from 'http'\nimport { RouteStack } from './route_stack'\n\nimport { PartyRouterStack } from './router'\n\nexport interface BootstrapConfig {\n  port: number | string\n  turboMode?: boolean\n  server?: any\n}\n\nexport class uApp {\n\n  static TURBO_MODE = false\n\n  static bootstrap (app, config?: BootstrapConfig): Promise<any> {\n    // Default port if not provided\n    if (typeof config.port === 'undefined') {\n      throw new Error('`config.port` is not defined.')\n    }\n\n    // Default server if not provided\n    config.server = config.server || http\n\n    if (config.turboMode) {\n\n      /**\n       * Checks if the developer is attempting to use path patterns\n       * despite enabling Turbo Mode.\n       */\n      PartyRouterStack.forEach(_stack => {\n        const conflictingPathUse = _stack.routerStack\n        .find(_childStack => _childStack.path)\n\n        const conflictingPath = conflictingPathUse.path\n\n        if (conflictingPathUse) {\n          console.warn('\\nWARNING: Handler with path pattern '\n            + conflictingPath + ' will be ignored in Turbo Mode.')\n        }\n      })\n\n      uApp.TURBO_MODE = true\n    }\n\n    const topRoutes = PartyRouterStack\n    .find(_stack => _stack.routerName === app.name)\n\n    if (!topRoutes) {\n      console.warn('\\nWARNING: No root handlers found. If you intended'\n        + ' not to add any RouterStack items to the main Router, ignore'\n        + ' this message.')\n    } else {\n      RouteStack.addStack(...topRoutes.routerStack)\n    }\n\n    const server = config.server\n    .createServer((req, res) => RouteStack.matchRequest(req, res))\n\n    return new Promise((resolve, reject) => {\n      server.listen(config.port, (err) => {\n\n        if (err) {\n          reject(err)\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          if (config.turboMode) {\n            console.warn(\n              '\\nWARNING: Turbo Mode is enabled. Path matching is'\n              + ' disabled and request will only match request methods.'\n            )\n          }\n        }\n\n        resolve()\n      })\n    })\n  }\n}\n"]}