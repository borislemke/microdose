{"version":3,"file":"request.js","sourceRoot":"","sources":["../lib/request.ts"],"names":[],"mappings":";;AAKA;IAUI,6BAAY,OAAO;QANnB,SAAI,GAAQ,EAAE,CAAA;QAEd,UAAK,GAAQ,EAAE,CAAA;QAEf,WAAM,GAAQ,EAAE,CAAA;QAIZ,IAAI,CAAC,MAAM,GAAG,OAAO,CAAA;IACzB,CAAC;IAEa,0BAAM,GAApB,UAAqB,GAAoB;QAErC,IAAM,aAAa,GAAG,IAAI,mBAAmB,CAAC,GAAG,CAAC,CAAA;QAElD,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAa,CAAC,CAAC,CAAC;YAC7B,GAAG,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,CAAA;QACnC,CAAC;QAED,MAAM,CAAE,GAAoB,CAAA;IAChC,CAAC;IACL,0BAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,kDAAmB","sourcesContent":["import {IncomingMessage} from 'http'\n\nexport interface MicroRequest extends IncomingMessage, MicroRequestBuilder {\n}\n\nexport class MicroRequestBuilder {\n\n    native: IncomingMessage\n\n    body: any = {}\n\n    local: any = {}\n\n    params: any = {}\n\n    constructor(request) {\n\n        this.native = request\n    }\n\n    public static create(req: IncomingMessage): MicroRequest {\n\n        const _microRequest = new MicroRequestBuilder(req)\n\n        for (let meth in _microRequest) {\n            req[meth] = _microRequest[meth]\n        }\n\n        return (req as MicroRequest)\n    }\n}\n"]}